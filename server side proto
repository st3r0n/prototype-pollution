++++++++++++++++DETECTION OF SERVER SIDE PROTO POLLUTION++++++++++++++++++++++++++++++++++++++++++++++++++++
note--> for loop i JS iterates over all properties that means it will onclude everytjhing from objects own property to protytpe property
now  for serverside prototype pollution we can look for anything that submits to the server and can we add __proto__ inside it wuth propertyname and  values
examples being the following
POST or PUT requests that submit JSON data to an application or API are prime candidates for this kind of behavior as it's common for servers to respond with a 
JSON representation of the new or updated object.
In this case, you could attempt to pollute the global Object.prototype with an arbitrary property as follows: 

POST /user/update HTTP/1.1
Host: vulnerable-website.com
...
{
    "user":"wiener",                       and the server will return the property in response
    "firstName":"Peter",
    "lastName":"Wiener",
    "__proto__":{
        "foo":"bar"                      ------> so foo:bar will b included in response
    }
}
look for PUT nad POst request being sent to server

2. what if we dont have something like previous scenario where our polluted property is not reflected:
varios methods acan be used for that but only a selection of them s used here
I.using status code override : here we will change the status code property such that when error occur our polluted code will be shown to us not the one that it reslly should
step 1--> cause an error and look at the code
step 2 pollute the status code with your own code and status property
step3 --> cause an error if our status code is reflected we have sussecfully detected prototpe pollution
 Remember that this must be between 400 and 599. 
and u can cause 500 erro which may display status code

II JSON spaces override -->
in this technique we can set the value of indentation to specific value and see the response 
if responce has indentation we set we can confirm that is is vulnerable          ---------> Although the prototype pollution has been fixed in Express 4.17.4
remember to switch to raw tab 
"__proto__": {
    "json spaces":10
}     something like this would be the request

III Charset override ------> left


3.scanning for server side sources--> we can make use of server side proto type scanner from bapp

use constructor method if proto not working
-disable-proto=delete or --disable-proto=throw respectively. However, this can also be bypassed by using the constructor technique





